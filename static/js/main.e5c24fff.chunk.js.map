{"version":3,"sources":["firebase/index.js","services/messaging.js","components/MessageSender/styles.js","components/MessageSender/MessageSender.js","components/Messages.js","hooks/useMessages.js","assets/ig_text.png","screens/Chat/styles.js","screens/Chat/Chat.js","screens/Login/styles.js","assets/ig_initial.png","assets/ig_logo.png","services/authentication.js","screens/Login/LoginTest.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","db","firestore","MessagingService","getMessages","collection","then","messages","_messages","forEach","message","push","data","observeMessages","callback","onSnapshot","sendMessage","user","currentUser","add","uid","photo","photoURL","name","displayName","email","created","FieldValue","serverTimestamp","MessageSender","styled","div","useState","setMessage","handleSubmit","type","value","placeholder","onChange","e","target","onSubmit","onClick","Messages","ref","useRef","useEffect","current","scrollTop","scrollHeight","className","map","messageClass","src","alt","key","useMessages","setMessages","useCollection","orderBy","limit","messagesCollection","loadingMessages","error","newMessages","docs","doc","id","reverse","Container","Chat","Logo","Body","LeftBody","RightBody","ContentRight","AuthenticationService","isLoggedIn","observeStatus","onAuthStateChanged","loginWithGoogle","provider","GoogleAuthProvider","signInWithPopup","res","token","credential","accessToken","LoginTest","Initial","Text","App","logged","setLogged","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e5c24fff.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\n// Add the Firebase products that you want to use\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nfirebase.initializeApp({\r\n    apiKey: \"AIzaSyDIyBC0oWZlE1TlVO7j5OJi40A9lKBJqrc\",\r\n    authDomain: \"npl-direct.firebaseapp.com\",\r\n    databaseURL: \"https://npl-direct.firebaseio.com\",\r\n    projectId: \"npl-direct\",\r\n    storageBucket: \"npl-direct.appspot.com\",\r\n    messagingSenderId: \"301740645078\",\r\n    appId: \"1:301740645078:web:07f8f35678910e15300777\",\r\n    measurementId: \"G-XDKY9H4MQL\"\r\n  })\r\n  \r\n  export { firebase }\r\n  \r\n  export const auth = firebase.auth\r\n  export const db = firebase.firestore()\r\n","import { auth, db, firebase } from '../firebase'\r\n\r\nconst MessagingService = {\r\n  async getMessages() {\r\n    \r\n    return db\r\n      .collection('messages')\r\n      .then(messages => {\r\n        let _messages = []\r\n        messages.forEach(message => {\r\n          _messages.push(message.data())\r\n        })\r\n        return _messages\r\n      })\r\n  },\r\n\r\n  observeMessages (callback) {\r\n    db.collection('messages').onSnapshot(callback)\r\n  },\r\n\r\n  async sendMessage (message) {\r\n    const user = auth().currentUser\r\n\r\n    db.collection('messages').add({\r\n      user: {\r\n        uid: user.uid,\r\n        photo: user.photoURL,\r\n        name: user.displayName,\r\n        email: user.email\r\n      },\r\n      message,\r\n      created: firebase.firestore.FieldValue.serverTimestamp()\r\n    })\r\n  },\r\n}\r\n\r\nexport default MessagingService\r\n","import styled from \"styled-components\";\r\n\r\nexport const MessageSender = styled.div`\r\n  display: flex;\r\n  padding: 16px;\r\n  input {\r\n    flex-grow: 1;\r\n    border-radius: 0;\r\n    border: none;\r\n    border-bottom: 1px solid #eee;\r\n    transition: 0.25s ease;\r\n    outline: none;\r\n    padding: 8px;\r\n    color: #1e94d2;\r\n\r\n    :hover,\r\n    :focus {\r\n      border-color: #c2c2c2;\r\n    }\r\n  }\r\n\r\n  button {\r\n    background-color: #1e94d2;\r\n    color: #fff;\r\n    border: none;\r\n    text-transform: uppercase;\r\n    letter-spacing: 0.75px;\r\n    font-size: 12px;\r\n    padding: 0 16px;\r\n    border-radius: 7px;\r\n  }\r\n`;\r\n","import { useState } from \"react\"\r\nimport MessagingService from '../../services/messaging'\r\nimport * as S from './styles'\r\n\r\nfunction MessageSender () {\r\n  const [message, setMessage] = useState('')\r\n  \r\n  function handleSubmit () {\r\n    MessagingService.sendMessage(message)\r\n    setMessage('')\r\n  }\r\n\r\n  return <S.MessageSender>\r\n    <input\r\n      type=\"text\"\r\n      value={message}\r\n      placeholder=\"Mensagem...\"\r\n      onChange={e => setMessage(e.target.value)}\r\n      onSubmit={handleSubmit}\r\n    />\r\n\r\n    <button onClick={handleSubmit}>\r\n      Enviar\r\n    </button>\r\n  </S.MessageSender>\r\n}\r\n\r\nexport default MessageSender\r\n\r\n","import { useEffect, useRef } from 'react'\r\nimport { auth } from '../firebase'\r\nimport './Messages.css'\r\n\r\nfunction Messages ({ messages }) {\r\n  const ref = useRef(null)\r\n\r\n  useEffect(() => {\r\n    ref.current.scrollTop = ref.current.scrollHeight\r\n  }, [messages])\r\n\r\n  return <div className=\"Messages\" ref={ref}>\r\n    {\r\n      messages.map(message =>{\r\n        const user = auth().currentUser\r\n        const messageClass = message.user.uid === user.uid\r\n          ? 'outgoing'\r\n          : 'incoming'\r\n\r\n        return <div key={message.key} className={`Message ${messageClass}`}>\r\n          <div className={messageClass}>\r\n            <img\r\n              src={message.user.photo}\r\n              alt={message.user.displayName}\r\n            />\r\n\r\n            <span>\r\n              { message.message }\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n      })\r\n    }\r\n  </div>\r\n}\r\n\r\nexport default Messages\r\n\r\n","import { useEffect, useState } from 'react';\r\nimport { useCollection } from 'react-firebase-hooks/firestore';\r\nimport { db } from '../firebase';\r\n\r\nfunction useMessages () {\r\n  const [messages, setMessages] = useState([])\r\n  const [messagesCollection, loadingMessages, error] = useCollection(\r\n    db.collection('messages')\r\n      .orderBy('created', 'desc')\r\n      .limit(500)\r\n  )\r\n\r\n  useEffect(() => {\r\n    const newMessages = messagesCollection?.docs\r\n      .map(doc => ({\r\n        ...doc.data(),\r\n        key: doc.id\r\n      })).reverse() || []\r\n\r\n    setMessages(newMessages)\r\n  }, [messagesCollection])\r\n\r\n  return {\r\n    messages,\r\n    loadingMessages,\r\n    error\r\n  }\r\n}\r\n\r\nexport default useMessages","export default __webpack_public_path__ + \"static/media/ig_text.9fa093ac.png\";","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: #fff;\r\n  width: 640px;\r\n  height: 480px;\r\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\r\n\r\n  img {\r\n    width: 20%;\r\n    transition: 0.25s ease;\r\n    align-self: center;\r\n\r\n    :hover {\r\n      transform: scale(1.8);\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 768px) {\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n    img{\r\n        width: 30%;\r\n    }\r\n  }\r\n`;\r\n","import MessageSender from '../../components/MessageSender/MessageSender';\r\nimport Messages from '../../components/Messages';\r\nimport useMessages from '../../hooks/useMessages';\r\nimport Logo from '../../assets/ig_text.png'\r\n\r\nimport * as S from './styles'\r\n\r\nfunction Chat () {\r\n  const { messages } = useMessages()\r\n\r\n  return <S.Container>\r\n    <img src={Logo}/>\r\n    <Messages messages={messages} />\r\n    <MessageSender />\r\n  </S.Container>\r\n}\r\n\r\nexport default Chat","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  background-color: #fafafa;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  @media (max-width: 768px) {\r\n    background-color: #fafafa;\r\n  }\r\n`;\r\nexport const Body = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  @media (max-width: 768px) {\r\n    height: 100%;\r\n  }\r\n`;\r\nexport const LeftBody = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  #initial {\r\n    height: 420px;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\nexport const RightBody = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-left: 15px;\r\n  background-color: red;\r\n\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    height: 100%;\r\n    margin: 0px;\r\n  }\r\n`;\r\n\r\nexport const ContentRight = styled.div`\r\n  width: 220px;\r\n  height: 220px;\r\n  background-color: #fff;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  border: 1px solid #c8d6e5;\r\n\r\n  button {\r\n    color: #fff;\r\n    background-color: #3498db;\r\n    width: 70%;\r\n    padding: 4px;\r\n    border-radius: 7px;\r\n    border: none;\r\n    cursor: pointer;\r\n\r\n    font-family: \"Lucida Sans\", \"Lucida Sans Regular\", \"Lucida Grande\",\r\n      \"Lucida Sans Unicode\", Geneva, Verdana, sans-serif;\r\n  }\r\n  #text {\r\n    width: 50%;\r\n  }\r\n  #logo {\r\n    width: 55px;\r\n    height: 55px;\r\n  }\r\n  @media (max-width: 768px) {\r\n    border: none;\r\n    height: 100%;\r\n    background-color: #fafafa;\r\n\r\n    width: 100%;\r\n    justify-content: center;\r\n\r\n    #text {\r\n      width: 75%;\r\n      margin-bottom: 30px;\r\n    }\r\n\r\n    button {\r\n      font-size: 16px;\r\n      width: 75%;\r\n      height: 50px;\r\n      margin-top: 30px;\r\n    }\r\n  }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/ig_initial.9c6581ff.png\";","export default __webpack_public_path__ + \"static/media/ig_logo.d82a0f32.png\";","import { auth } from '../firebase'\r\n\r\nconst AuthenticationService = {\r\n  async isLoggedIn () {\r\n    const user = await auth().currentUser\r\n    return !!user\r\n  },\r\n\r\n  observeStatus (callback) {\r\n    auth().onAuthStateChanged(callback)\r\n  },\r\n \r\n  async loginWithGoogle() {\r\n    const provider = new auth.GoogleAuthProvider();\r\n\r\n    return auth()\r\n      .signInWithPopup(provider)\r\n      .then(res => {\r\n        const token = res.credential.accessToken\r\n        const user = res.user\r\n\r\n        return {\r\n          token, user\r\n        }\r\n      })\r\n  }\r\n}\r\n\r\nexport default AuthenticationService","import React from \"react\";\r\nimport * as S from \"./styles\";\r\nimport Initial from \"../../assets/ig_initial.png\";\r\nimport Text from \"../../assets/ig_text.png\";\r\nimport Logo from \"../../assets/ig_logo.png\";\r\nimport AuthenticationService from \"../../services/authentication\";\r\n\r\nexport default function LoginTest() {\r\n  function handleLogin() {\r\n    AuthenticationService.loginWithGoogle();\r\n  }\r\n\r\n  return (\r\n    <S.Container>\r\n      <S.Body>\r\n        <S.LeftBody>\r\n          <img id=\"initial\" src={Initial} alt=\"logo\" />\r\n        </S.LeftBody>\r\n\r\n        <S.RightBody>\r\n          <S.ContentRight>\r\n            <img id=\"text\" src={Text} alt=\"logo\" />\r\n            <img id=\"logo\" src={Logo} alt=\"logo\" />\r\n            <button onClick={handleLogin}>Login com Google</button>\r\n          </S.ContentRight>\r\n        </S.RightBody>\r\n      </S.Body>\r\n    </S.Container>\r\n  );\r\n}\r\n","import { useState } from 'react';\nimport './App.css';\nimport Chat from './screens/Chat/Chat';\nimport LoginTest from './screens/Login/LoginTest';\nimport AuthenticationService from './services/authentication';\n\nfunction App() {\n  const [logged, setLogged] = useState(AuthenticationService.isLoggedIn())\n  \n  AuthenticationService.observeStatus(user => {\n    setLogged(!!user)\n  })\n\n  return (\n    <div className=\"App\">\n     \n      { logged ? <Chat /> : <LoginTest /> }\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}